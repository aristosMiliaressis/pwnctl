{
 "Resources": {
  "pwnwrkvpc020FF09A": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/Resource"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet1Subnet19236D3C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet-1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet1"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet1/Subnet"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet1RouteTable63B10848": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet1"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet1/RouteTable"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet1RouteTableAssociation4CBC77F6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "pwnwrkvpcpublicsubnet1Subnet1RouteTable63B10848"
    },
    "SubnetId": {
     "Ref": "pwnwrkvpcpublicsubnet1Subnet1Subnet19236D3C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet1/RouteTableAssociation"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet1DefaultRoute8B99B5AA": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "pwnwrkvpcpublicsubnet1Subnet1RouteTable63B10848"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "pwnwrkvpcIGWAC3C03B5"
    }
   },
   "DependsOn": [
    "pwnwrkvpcVPCGWE7842D46"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet1/DefaultRoute"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet2Subnet55EF5A82": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public-subnet-1"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet2"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet2/Subnet"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet2RouteTableD5AC0B66": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet2"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet2/RouteTable"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet2RouteTableAssociationAC04BAF4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "pwnwrkvpcpublicsubnet1Subnet2RouteTableD5AC0B66"
    },
    "SubnetId": {
     "Ref": "pwnwrkvpcpublicsubnet1Subnet2Subnet55EF5A82"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet2/RouteTableAssociation"
   }
  },
  "pwnwrkvpcpublicsubnet1Subnet2DefaultRoute19973B81": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "pwnwrkvpcpublicsubnet1Subnet2RouteTableD5AC0B66"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "pwnwrkvpcIGWAC3C03B5"
    }
   },
   "DependsOn": [
    "pwnwrkvpcVPCGWE7842D46"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/public-subnet-1Subnet2/DefaultRoute"
   }
  },
  "pwnwrkvpcprivatesubnet2Subnet1SubnetA8ACA595": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet-2"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet1"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet1/Subnet"
   }
  },
  "pwnwrkvpcprivatesubnet2Subnet1RouteTable85CEAF7B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet1"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet1/RouteTable"
   }
  },
  "pwnwrkvpcprivatesubnet2Subnet1RouteTableAssociation20106C31": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "pwnwrkvpcprivatesubnet2Subnet1RouteTable85CEAF7B"
    },
    "SubnetId": {
     "Ref": "pwnwrkvpcprivatesubnet2Subnet1SubnetA8ACA595"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet1/RouteTableAssociation"
   }
  },
  "pwnwrkvpcprivatesubnet2Subnet2Subnet206413D1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private-subnet-2"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Isolated"
     },
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet2"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet2/Subnet"
   }
  },
  "pwnwrkvpcprivatesubnet2Subnet2RouteTable935C29DA": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet2"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet2/RouteTable"
   }
  },
  "pwnwrkvpcprivatesubnet2Subnet2RouteTableAssociation91D61AFE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "pwnwrkvpcprivatesubnet2Subnet2RouteTable935C29DA"
    },
    "SubnetId": {
     "Ref": "pwnwrkvpcprivatesubnet2Subnet2Subnet206413D1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/private-subnet-2Subnet2/RouteTableAssociation"
   }
  },
  "pwnwrkvpcIGWAC3C03B5": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-vpc"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/IGW"
   }
  },
  "pwnwrkvpcVPCGWE7842D46": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    },
    "InternetGatewayId": {
     "Ref": "pwnwrkvpcIGWAC3C03B5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-vpc/VPCGW"
   }
  },
  "pwnctlaurorapostgresqlinstancesg15729121": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "pwnctl-aurora-postgresql-instance-sg",
    "GroupName": "pwnctl-aurora-postgresql-instance-sg",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Open to the world",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-aurora-postgresql-instance-sg/Resource"
   }
  },
  "pwnctlaurorapostgresqlinstancecreds11CBFF7B": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "GenerateStringKey": "password",
     "IncludeSpace": false,
     "SecretStringTemplate": "{\"username\":\"pwnadmin\"}"
    },
    "Name": "pwnctl-Db-Credentials",
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-aurora-postgresql-instance-creds/Resource"
   }
  },
  "pwnctlaurorapostgresqlinstancecredsAttachment1FC472CC": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "pwnctlaurorapostgresqlinstancecreds11CBFF7B"
    },
    "TargetId": {
     "Ref": "pwnctlauroraclusterC5F8F192"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-aurora-postgresql-instance-creds/Attachment/Resource"
   }
  },
  "pwnctlaurorasubnetg": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Aurora RDS Subnet Group for database pwnctl-aurora-postgresql-instance",
    "SubnetIds": [
     {
      "Ref": "pwnwrkvpcpublicsubnet1Subnet1Subnet19236D3C"
     },
     {
      "Ref": "pwnwrkvpcpublicsubnet1Subnet2Subnet55EF5A82"
     },
     {
      "Ref": "pwnwrkvpcprivatesubnet2Subnet1SubnetA8ACA595"
     },
     {
      "Ref": "pwnwrkvpcprivatesubnet2Subnet2Subnet206413D1"
     }
    ],
    "DBSubnetGroupName": "pwnctl-aurora-subnet-g",
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-aurora-subnet-g/Default"
   }
  },
  "pwnctlauroraclusterC5F8F192": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "Engine": "aurora-postgresql",
    "CopyTagsToSnapshot": true,
    "DatabaseName": "pwnctl",
    "DBClusterIdentifier": "pwnctl-aurora-cluster",
    "DBClusterParameterGroupName": "default.aurora-postgresql13",
    "DBSubnetGroupName": {
     "Ref": "pwnctlaurorasubnetg"
    },
    "EngineVersion": "13.6",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "pwnctlaurorapostgresqlinstancecreds11CBFF7B"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "pwnctlaurorapostgresqlinstancecreds11CBFF7B"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "Port": 5432,
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "pwnctlaurorapostgresqlinstancesg15729121",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-aurora-cluster/Resource"
   }
  },
  "pwnctlauroraclusterInstance1C026056A": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "pwnctlauroraclusterC5F8F192"
    },
    "DBInstanceClass": "db.t3.medium",
    "DBInstanceIdentifier": "pwnctl-aurora-postgresql-instance-1",
    "DBSubnetGroupName": {
     "Ref": "pwnctlaurorasubnetg"
    },
    "Engine": "aurora-postgresql",
    "EngineVersion": "13.6",
    "PubliclyAccessible": true,
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "DependsOn": [
    "pwnwrkvpcpublicsubnet1Subnet1DefaultRoute8B99B5AA",
    "pwnwrkvpcpublicsubnet1Subnet2DefaultRoute19973B81"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-aurora-cluster/Instance1"
   }
  },
  "pwnwrkdlqfifoA60405CB": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "ContentBasedDeduplication": true,
    "FifoQueue": true,
    "MaximumMessageSize": 8192,
    "MessageRetentionPeriod": 1209600,
    "QueueName": "pwnwrk-dlq.fifo",
    "ReceiveMessageWaitTimeSeconds": 20,
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VisibilityTimeout": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-dlq.fifo/Resource"
   }
  },
  "pwnwrkfifo043C4E87": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "ContentBasedDeduplication": true,
    "FifoQueue": true,
    "MaximumMessageSize": 8192,
    "MessageRetentionPeriod": 86400,
    "QueueName": "pwnwrk.fifo",
    "ReceiveMessageWaitTimeSeconds": 20,
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "pwnwrkdlqfifoA60405CB",
       "Arn"
      ]
     },
     "maxReceiveCount": 10
    },
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VisibilityTimeout": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk.fifo/Resource"
   }
  },
  "pwnwrkfs6B0E83F5": {
   "Type": "AWS::EFS::FileSystem",
   "Properties": {
    "FileSystemTags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-fs"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/Resource"
   }
  },
  "pwnwrkfsEfsSecurityGroup5C55F9F7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "pwnctl/pwnwrk-fs/EfsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "pwnctl/pwnwrk-fs"
     },
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/EfsSecurityGroup/Resource"
   }
  },
  "pwnwrkfsEfsSecurityGroupfrompwnctlpwnctlapiSecurityGroupC5E73E832049BE99C526": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from pwnctlpwnctlapiSecurityGroupC5E73E83:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "pwnwrkfsEfsSecurityGroup5C55F9F7",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "pwnctlapiSecurityGroupC000D8A4",
      "GroupId"
     ]
    },
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/EfsSecurityGroup/from pwnctlpwnctlapiSecurityGroupC5E73E83:2049"
   }
  },
  "pwnwrkfsEfsSecurityGroupfrompwnctlpwnwrksvcSecurityGroupE5704B222049A40EAC9F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "from pwnctlpwnwrksvcSecurityGroupE5704B22:2049",
    "FromPort": 2049,
    "GroupId": {
     "Fn::GetAtt": [
      "pwnwrkfsEfsSecurityGroup5C55F9F7",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "pwnwrksvcSecurityGroup4BBDA767",
      "GroupId"
     ]
    },
    "ToPort": 2049
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/EfsSecurityGroup/from pwnctlpwnwrksvcSecurityGroupE5704B22:2049"
   }
  },
  "pwnwrkfsEfsMountTarget1E8F83F52": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "pwnwrkfs6B0E83F5"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "pwnwrkfsEfsSecurityGroup5C55F9F7",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "pwnwrkvpcprivatesubnet2Subnet1SubnetA8ACA595"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/EfsMountTarget1"
   }
  },
  "pwnwrkfsEfsMountTarget2656CB1BA": {
   "Type": "AWS::EFS::MountTarget",
   "Properties": {
    "FileSystemId": {
     "Ref": "pwnwrkfs6B0E83F5"
    },
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "pwnwrkfsEfsSecurityGroup5C55F9F7",
       "GroupId"
      ]
     }
    ],
    "SubnetId": {
     "Ref": "pwnwrkvpcprivatesubnet2Subnet2Subnet206413D1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/EfsMountTarget2"
   }
  },
  "pwnwrkfspwnctllambdaapifsapF9EF4E24": {
   "Type": "AWS::EFS::AccessPoint",
   "Properties": {
    "FileSystemId": {
     "Ref": "pwnwrkfs6B0E83F5"
    },
    "PosixUser": {
     "Gid": "0",
     "Uid": "0"
    },
    "RootDirectory": {
     "CreationInfo": {
      "OwnerGid": "1001",
      "OwnerUid": "1001",
      "Permissions": "777"
     },
     "Path": "/"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-fs/pwnctl-lambda-api-fsap/Resource"
   }
  },
  "pwnctlApiApiKeyC0ABFCF1": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {
     "ExcludePunctuation": true,
     "IncludeSpace": false
    },
    "Name": "pwnctl-Api-ApiKey",
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-Api-ApiKey/Resource"
   }
  },
  "pwnctlapirole0826A6D0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonElasticFileSystemClientFullAccess"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api-role/Resource"
   }
  },
  "pwnctlapiroleDefaultPolicy1D23B5B9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "pwnctlApiApiKeyC0ABFCF1"
        },
        {
         "Ref": "pwnctlaurorapostgresqlinstancecreds11CBFF7B"
        }
       ]
      },
      {
       "Action": "elasticfilesystem:ClientMount",
       "Condition": {
        "StringEquals": {
         "elasticfilesystem:AccessPointArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":elasticfilesystem:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":access-point/",
            {
             "Ref": "pwnwrkfspwnctllambdaapifsapF9EF4E24"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "elasticfilesystem:ClientWrite",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":elasticfilesystem:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":file-system/",
          {
           "Ref": "pwnwrkfs6B0E83F5"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "pwnctlapiroleDefaultPolicy1D23B5B9",
    "Roles": [
     {
      "Ref": "pwnctlapirole0826A6D0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api-role/DefaultPolicy/Resource"
   }
  },
  "pwnctlapiSecurityGroupC000D8A4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function pwnctlpwnctlapi6E03EBCA",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    }
   },
   "DependsOn": [
    "pwnwrkfsEfsMountTarget1E8F83F52",
    "pwnwrkfsEfsMountTarget2656CB1BA"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api/SecurityGroup/Resource"
   }
  },
  "pwnctlapi975A4D96": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParametersdc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6cS3Bucket73F16698"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersdc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6cS3VersionKey0544B6C6"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersdc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6cS3VersionKey0544B6C6"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "pwnctlapirole0826A6D0",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "PWNCTL_Db__Endpoint": {
       "Fn::GetAtt": [
        "pwnctlauroraclusterInstance1C026056A",
        "Endpoint.Address"
       ]
      },
      "PWNCTL_JobQueue__QueueName": "pwnwrk.fifo",
      "PWNCTL_JobQueue__DLQName": "pwnwrk-dlq.fifo",
      "PWNCTL_JobQueue__VisibilityTimeout": "30",
      "PWNCTL_Logging__Provider": "console",
      "PWNCTL_Logging__MinLevel": "Debug",
      "PWNCTL_Logging__LogGroup": "/aws/lambda/pwnctl-api",
      "PWNCTL_EFS_MOUNT_POINT": "/mnt/efs",
      "PWNCTL_InstallPath": "/mnt/efs"
     }
    },
    "FileSystemConfigs": [
     {
      "Arn": {
       "Fn::Join": [
        "",
        [
         "arn:",
         {
          "Ref": "AWS::Partition"
         },
         ":elasticfilesystem:",
         {
          "Ref": "AWS::Region"
         },
         ":",
         {
          "Ref": "AWS::AccountId"
         },
         ":access-point/",
         {
          "Ref": "pwnwrkfspwnctllambdaapifsapF9EF4E24"
         }
        ]
       ]
      },
      "LocalMountPath": "/mnt/efs"
     }
    ],
    "Handler": "pwnctl.api",
    "Runtime": "dotnet6",
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "Timeout": 30,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "pwnctlapiSecurityGroupC000D8A4",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "pwnwrkvpcprivatesubnet2Subnet1SubnetA8ACA595"
      },
      {
       "Ref": "pwnwrkvpcprivatesubnet2Subnet2Subnet206413D1"
      }
     ]
    }
   },
   "DependsOn": [
    "pwnctlapiroleDefaultPolicy1D23B5B9",
    "pwnctlapirole0826A6D0",
    "pwnwrkfsEfsMountTarget1E8F83F52",
    "pwnwrkfsEfsMountTarget2656CB1BA",
    "pwnwrkfsEfsSecurityGroupfrompwnctlpwnctlapiSecurityGroupC5E73E832049BE99C526"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api/Resource",
    "aws:asset:path": "asset.dc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6c.0",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "pwnctlapiLogRetention4640D215": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "pwnctlapi975A4D96"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "DependsOn": [
    "pwnwrkfsEfsMountTarget1E8F83F52",
    "pwnwrkfsEfsMountTarget2656CB1BA"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api/LogRetention/Resource"
   }
  },
  "pwnctlapiFunctionUrlC82E55D9": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "pwnctlapi975A4D96",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "pwnwrkfsEfsMountTarget1E8F83F52",
    "pwnwrkfsEfsMountTarget2656CB1BA"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api/FunctionUrl/Resource"
   }
  },
  "pwnctlapiinvokefunctionurlD1E71F7B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "pwnctlapi975A4D96",
      "Arn"
     ]
    },
    "Principal": "*",
    "FunctionUrlAuthType": "NONE"
   },
   "DependsOn": [
    "pwnwrkfsEfsMountTarget1E8F83F52",
    "pwnwrkfsEfsMountTarget2656CB1BA"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnctl-api/invoke-function-url"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3Bucket821B928E"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "pwnctl/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "pwnwrkrole35F47018": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonElasticFileSystemClientFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-role/Resource"
   }
  },
  "pwnwrkroleDefaultPolicyBF2C6556": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudwatch:*",
        "logs:*"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage",
        "sqs:SendMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "pwnwrkfifo043C4E87",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "pwnctlaurorapostgresqlinstancecreds11CBFF7B"
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "pwnwrklogs90232915",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "pwnwrkroleDefaultPolicyBF2C6556",
    "Roles": [
     {
      "Ref": "pwnwrkrole35F47018"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-role/DefaultPolicy/Resource"
   }
  },
  "pwnwrkdef3A414DAF": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 512,
      "Environment": [
       {
        "Name": "PWNCTL_Db__Endpoint",
        "Value": {
         "Fn::GetAtt": [
          "pwnctlauroraclusterInstance1C026056A",
          "Endpoint.Address"
         ]
        }
       },
       {
        "Name": "PWNCTL_JobQueue__QueueName",
        "Value": {
         "Fn::GetAtt": [
          "pwnwrkfifo043C4E87",
          "QueueName"
         ]
        }
       },
       {
        "Name": "PWNCTL_JobQueue__DLQName",
        "Value": {
         "Fn::GetAtt": [
          "pwnwrkdlqfifoA60405CB",
          "QueueName"
         ]
        }
       },
       {
        "Name": "PWNCTL_JobQueue__VisibilityTimeout",
        "Value": "30"
       },
       {
        "Name": "PWNCTL_Logging__Provider",
        "Value": "cloudwatch"
       },
       {
        "Name": "PWNCTL_Logging__MinLevel",
        "Value": "Debug"
       },
       {
        "Name": "PWNCTL_Logging__LogGroup",
        "Value": {
         "Ref": "pwnwrklogs90232915"
        }
       },
       {
        "Name": "PWNCTL_EFS_MOUNT_POINT",
        "Value": "/mnt/efs"
       }
      ],
      "Essential": true,
      "Image": "public.ecr.aws/i0m2p7r6/pwnwrk:latest",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "pwnwrklogs90232915"
        },
        "awslogs-stream-prefix": "/aws/ecs",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Memory": 2048,
      "MountPoints": [
       {
        "ContainerPath": "/mnt/efs",
        "ReadOnly": false,
        "SourceVolume": "pwnwrk-fs"
       }
      ],
      "Name": "pwnwrk"
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "pwnwrkrole35F47018",
      "Arn"
     ]
    },
    "Family": "pwnctlpwnwrkdef8518D6FA",
    "Memory": "2048",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "pwnwrkrole35F47018",
      "Arn"
     ]
    },
    "Volumes": [
     {
      "EFSVolumeConfiguration": {
       "AuthorizationConfig": {
        "AccessPointId": {
         "Ref": "pwnwrkfspwnctllambdaapifsapF9EF4E24"
        },
        "IAM": "ENABLED"
       },
       "FilesystemId": {
        "Ref": "pwnwrkfs6B0E83F5"
       },
       "RootDirectory": "/",
       "TransitEncryption": "ENABLED"
      },
      "Name": "pwnwrk-fs"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-def/Resource"
   }
  },
  "pwnwrklogs90232915": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/ecs/pwnwrk",
    "RetentionInDays": 7,
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-logs/Resource"
   }
  },
  "pwnwrklogsPolicyResourcePolicyC0EE2640": {
   "Type": "AWS::Logs::ResourcePolicy",
   "Properties": {
    "PolicyDocument": {
     "Fn::Join": [
      "",
      [
       "{\"Statement\":[{\"Action\":[\"logs:CreateLogStream\",\"logs:PutLogEvents\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ecs-tasks.amazonaws.com\"},\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "pwnwrklogs90232915",
         "Arn"
        ]
       },
       "\"}],\"Version\":\"2012-10-17\"}"
      ]
     ]
    },
    "PolicyName": "pwnctlpwnwrklogsPolicy4C8FE4CE"
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-logs/Policy/ResourcePolicy"
   }
  },
  "pwnwrkclusterB1ACABA0": {
   "Type": "AWS::ECS::Cluster",
   "Properties": {
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-cluster/Resource"
   }
  },
  "pwnwrksvcService205F8023": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "CapacityProviderStrategy": [
     {
      "CapacityProvider": "FARGATE",
      "Weight": 1
     }
    ],
    "Cluster": {
     "Ref": "pwnwrkclusterB1ACABA0"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 0,
    "EnableECSManagedTags": false,
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "ENABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "pwnwrksvcSecurityGroup4BBDA767",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "pwnwrkvpcpublicsubnet1Subnet1Subnet19236D3C"
       },
       {
        "Ref": "pwnwrkvpcpublicsubnet1Subnet2Subnet55EF5A82"
       }
      ]
     }
    },
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "TaskDefinition": {
     "Ref": "pwnwrkdef3A414DAF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/Service"
   }
  },
  "pwnwrksvcSecurityGroup4BBDA767": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "pwnctl/pwnwrk-svc/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "stack",
      "Value": "pwnctl"
     }
    ],
    "VpcId": {
     "Ref": "pwnwrkvpc020FF09A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/SecurityGroup/Resource"
   }
  },
  "pwnwrksvcTaskCountTargetCCB13F0E": {
   "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
   "Properties": {
    "MaxCapacity": 5,
    "MinCapacity": 0,
    "ResourceId": {
     "Fn::Join": [
      "",
      [
       "service/",
       {
        "Ref": "pwnwrkclusterB1ACABA0"
       },
       "/",
       {
        "Fn::GetAtt": [
         "pwnwrksvcService205F8023",
         "Name"
        ]
       }
      ]
     ]
    },
    "RoleARN": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":iam::",
       {
        "Ref": "AWS::AccountId"
       },
       ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ]
     ]
    },
    "ScalableDimension": "ecs:service:DesiredCount",
    "ServiceNamespace": "ecs"
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/TaskCount/Target/Resource"
   }
  },
  "pwnwrksvcTaskCountTargetScaleInPolicyLowerPolicy171CB42A": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "pwnctlpwnwrksvcTaskCountTargetScaleInPolicyLowerPolicy75BCADED",
    "PolicyType": "StepScaling",
    "ScalingTargetId": {
     "Ref": "pwnwrksvcTaskCountTargetCCB13F0E"
    },
    "StepScalingPolicyConfiguration": {
     "AdjustmentType": "ExactCapacity",
     "Cooldown": 300,
     "MetricAggregationType": "Average",
     "StepAdjustments": [
      {
       "MetricIntervalLowerBound": -30,
       "MetricIntervalUpperBound": 0,
       "ScalingAdjustment": 2
      },
      {
       "MetricIntervalLowerBound": -59,
       "MetricIntervalUpperBound": -30,
       "ScalingAdjustment": 1
      },
      {
       "MetricIntervalUpperBound": -59,
       "ScalingAdjustment": 0
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/TaskCount/Target/ScaleInPolicy/LowerPolicy/Resource"
   }
  },
  "pwnwrksvcTaskCountTargetScaleInPolicyLowerAlarmBC36BC31": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "LessThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "AlarmActions": [
     {
      "Ref": "pwnwrksvcTaskCountTargetScaleInPolicyLowerPolicy171CB42A"
     }
    ],
    "AlarmDescription": "Lower threshold scaling alarm",
    "Dimensions": [
     {
      "Name": "QueueName",
      "Value": {
       "Fn::GetAtt": [
        "pwnwrkfifo043C4E87",
        "QueueName"
       ]
      }
     }
    ],
    "MetricName": "ApproximateNumberOfMessagesVisible",
    "Namespace": "AWS/SQS",
    "Period": 60,
    "Statistic": "Average",
    "Threshold": 60
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/TaskCount/Target/ScaleInPolicy/LowerAlarm/Resource"
   }
  },
  "pwnwrksvcTaskCountTargetScaleOutPolicyUpperPolicyB0D4F645": {
   "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
   "Properties": {
    "PolicyName": "pwnctlpwnwrksvcTaskCountTargetScaleOutPolicyUpperPolicyE1E0FE12",
    "PolicyType": "StepScaling",
    "ScalingTargetId": {
     "Ref": "pwnwrksvcTaskCountTargetCCB13F0E"
    },
    "StepScalingPolicyConfiguration": {
     "AdjustmentType": "ExactCapacity",
     "Cooldown": 300,
     "MetricAggregationType": "Average",
     "StepAdjustments": [
      {
       "MetricIntervalLowerBound": 0,
       "MetricIntervalUpperBound": 29,
       "ScalingAdjustment": 1
      },
      {
       "MetricIntervalLowerBound": 29,
       "MetricIntervalUpperBound": 59,
       "ScalingAdjustment": 2
      },
      {
       "MetricIntervalLowerBound": 59,
       "ScalingAdjustment": 3
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/TaskCount/Target/ScaleOutPolicy/UpperPolicy/Resource"
   }
  },
  "pwnwrksvcTaskCountTargetScaleOutPolicyUpperAlarmEF208281": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "AlarmActions": [
     {
      "Ref": "pwnwrksvcTaskCountTargetScaleOutPolicyUpperPolicyB0D4F645"
     }
    ],
    "AlarmDescription": "Upper threshold scaling alarm",
    "Dimensions": [
     {
      "Name": "QueueName",
      "Value": {
       "Fn::GetAtt": [
        "pwnwrkfifo043C4E87",
        "QueueName"
       ]
      }
     }
    ],
    "MetricName": "ApproximateNumberOfMessagesVisible",
    "Namespace": "AWS/SQS",
    "Period": 60,
    "Statistic": "Average",
    "Threshold": 1
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/pwnwrk-svc/TaskCount/Target/ScaleOutPolicy/UpperAlarm/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31U247aMBD9ln03pnSl7VOlhtCukLbblFDeBzNkvSR26gsIRfn3jp0b7EOVB585nsz1JAu++PLEPz18g4udicNp3ghtkDe5A3FiG7TaG4EssRYdcYVUBUuParxItbLOeOECm4GBCh2aYPzyrvaRJp+DdFKrloUsDYrPvNnVItztspRlfl9Kkfu9wug/oY32DrewL3HiJ46K0kJCiDw6s8zIMzicYqwVFUT4mdgLXPukvZU46vOtQuVYjsIb6a7PRvs6pvsvsVaFQWtbZlEYdLYCBQUamly0e/+AumMLpkB3k290+HjTMnOwFCd2MCZfLW+JFTjYg8W09Laf92p5Z6xpL6AEUoF/Kdpvjz4OMYKW4ZHIH7LE/ErvVOHm3vqpvepLY4kQ1GqmZVf2jdkyCRVvNrrbUDwzTduMc+5Qy0qo9gegfF6JYVsjHsAfUwa+PzI0lbQ2isY+ziDoz/IoQ7L50osTuiVNgJW6oFZedLEh5akYkoxxbiMeJDuVd8/QTESYCbUMQWD2tMKjVHIo+COjlQOp0Nxy0wIG2IfL0Zyl6FTcw1xAGVQc4qZh2PR11DVVEgUN3mlLHvS9kRRG17iOEOSeyR3Weefdt3fDJOPM71xaJkrtDxdw4o03SQkm7j2Ctm3ZSrtXdHP6OfCnOX/9vk3px5DU9WyHJuzl6/mRL+YLuqbn4d1KOTPUhayQb7rzH9DGgStcBAAA"
   },
   "Metadata": {
    "aws:cdk:path": "pwnctl/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "AssetParametersdc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6cS3Bucket73F16698": {
   "Type": "String",
   "Description": "S3 bucket for asset \"dc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6c\""
  },
  "AssetParametersdc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6cS3VersionKey0544B6C6": {
   "Type": "String",
   "Description": "S3 key for asset version \"dc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6c\""
  },
  "AssetParametersdc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6cArtifactHashEE4DC489": {
   "Type": "String",
   "Description": "Artifact hash for asset \"dc1aeb362121c45552f4e6d968d3fb2d422412261df4f87562962996ff906b6c\""
  },
  "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3Bucket821B928E": {
   "Type": "String",
   "Description": "S3 bucket for asset \"c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686\""
  },
  "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686S3VersionKey8D940F9A": {
   "Type": "String",
   "Description": "S3 key for asset version \"c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686\""
  },
  "AssetParametersc8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686ArtifactHashB7ECE5F1": {
   "Type": "String",
   "Description": "Artifact hash for asset \"c8dfcc3db7a767ebc6f9417372a8fee940927c659f793315834a6784dab3d686\""
  }
 },
 "Outputs": {
  "PwnctlApiUrl": {
   "Value": {
    "Fn::GetAtt": [
     "pwnctlapiFunctionUrlC82E55D9",
     "FunctionUrl"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 }
}