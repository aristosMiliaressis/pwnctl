- ShortName: ping_sweep
  CommandTemplate: ping-sweep.sh {{CIDR}}
  Subject: NetRange

- ShortName: reverse_range_lookup
  CommandTemplate: reverse-range-lookup.sh {{CIDR}}
  Subject: NetRange

- ShortName: domain_resolution
  CommandTemplate: dig +short {{Name}} | awk '{print "{{Name}} IN A " $1}'
  Subject: Domain

- ShortName: httpx
  CommandTemplate: echo {{Name}} | httpx -silent
  Subject: Domain

- ShortName: zone_trasfer
  CommandTemplate: zone-transfer.sh {{Name}}
  Subject: Domain

- ShortName: sub_enum
  CommandTemplate: sub-enum.sh {{Name}}
  Filter: Domain.ZoneDepth <= 2
  Subject: Domain

- ShortName: tld_brute
  CommandTemplate: tld-brute.sh {{Name}}
  Subject: Domain
  Filter: Domain.ZoneDepth == 1

- ShortName: asn_lookup
  CommandTemplate: asn-lookup.sh {{IP}}
  Subject: Host

- ShortName: reverse_lookup
  CommandTemplate: dig +short -x {{IP}}
  Subject: Host

- ShortName: tcp_scan
  CommandTemplate: tcp-scan.sh {{IP}}
  Subject: Host

- ShortName: udp_scan
  CommandTemplate: udp-scan.sh {{IP}}
  Subject: Host

- ShortName: get_alt_names
  CommandTemplate: get-alt-names.sh {{IP}}
  Subject: Host

- ShortName: get_all_urls
  CommandTemplate: get-all-urls.sh {{Url}}
  Subject: Endpoint
  Filter: Endpoint.Path == "/"

- ShortName: dir_brute_common
  CommandTemplate: dir-brute.sh {{Url}} /opt/wordlists/common.txt
  Filter: Endpoint.Path == "/"
  Subject: Endpoint

- ShortName: file_brute_config
  CommandTemplate: file-brute.sh {{Url}} /opt/wordlists/config.txt
  Filter: Endpoint.Path == "/"
  Subject: Endpoint

- ShortName: wafw00f
  CommandTemplate: wafw00f.sh {{Url}}
  Filter: Endpoint.Path == "/"
  Subject: Endpoint

- ShortName: grab_url_metadata
  CommandTemplate: grab-url-metadata.sh {{Url}}
  Filter: Endpoint.Path == "/"
  Subject: Endpoint

- ShortName: webanalyze
  CommandTemplate: webanalyze.sh {{Url}}
  Filter: Endpoint.Path == "/"
  Subject: Endpoint

- ShortName: screenshot
  CommandTemplate: screenshot.sh {{Url}}
  Filter: Endpoint.Path == "/"
  Subject: Endpoint

- ShortName: webcrawl
  CommandTemplate: webcrawl.sh '{{Url}}'
  Filter: Endpoint.Path == "/" || Tags["Content-Type"].Contains("/html") || Tags["Content-Type"].Contains("/xhtml")
  Subject: Endpoint

- ShortName: link_finder
  CommandTemplate: link-finder.sh {{Url}}
  Filter: Endpoint.Extension == "js" || Endpoint.Extension == "jsm" || Tags["Content-Type"].Contains("/javascript")
  Subject: Endpoint

- ShortName: cors_check
  CommandTemplate: check-cors.sh {{Url}}
  Subject: Endpoint
  Filter: Endpoint.Path == "/" || Tags["Content-Type"].Contains("/json") || Tags["Content-Type"].Contains("/xml")

- ShortName: shortname_scanning
  CommandTemplate: shortname-check.sh {{Url}}
  Subject: Endpoint
  Filter: Tags["Title"].Contains("Internet Information Services")|| Tags["Title"].Contains("IIS")||Tags["Server"].Contains("IIS")||Tags["Server"].Contains("Microsoft-HTTPAPI")

- ShortName: shortname_scanning_srv
  CommandTemplate: shortname-check.sh {{Origin}}
  Subject: Service
  Filter: Tags["Version"].Contains("IIS") || Tags["Version"].Contains("Microsoft HTTPAPI")

- ShortName: zone_walking
  CommandTemplate: ldns-walk {{Key}} | tail -n +2 | cut -d ' ' -f 1
  Filter: DNSRecord.Type == pwnctl.domain.Enums.DnsRecordType.NSEC
  Subject: DNSRecord

- ShortName: cloud_enum
  CommandTemplate: cloud-enum.sh {{Word}}
  Subject: Domain
  Filter: Domain.ZoneDepth == 1

- ShortName: s3_scan
  CommandTemplate: s3-scan.sh {{Url}}
  Subject: Endpoint
  Filter: Endpoint.Url.Contains("amazonaws.com") && Endpoint.Url.Contains("s3")