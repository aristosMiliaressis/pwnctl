Profiles: [ "all" ]

TaskDefinitions:
  - Name: ping_sweep
    CommandTemplate: ping-sweep.sh {{CIDR}}
    Subject: NetworkRange
    MonitorRules:
      Schedule: 0 0 * * *

  - Name: reverse_range_lookup
    CommandTemplate: reverse-range-lookup.sh {{CIDR}}
    Subject: NetworkRange
    MonitorRules:
      Schedule: 0 0 * * *

  - Name: asn_lookup
    CommandTemplate: asn-lookup.sh {{IP}}
    Subject: NetworkHost

  - Name: reverse_dns_lookup
    CommandTemplate: dig +short -x {{IP}}
    Subject: NetworkHost

  - Name: tcp_scan
    CommandTemplate: tcp-scan.sh {{IP}}
    Subject: NetworkHost
    CheckNotificationRules: true

  - Name: tls_probe
    CommandTemplate: tls-probe.sh {{Address}}
    Subject: NetworkSocket

  - Name: http_probe
    CommandTemplate: http-probe.sh {{Address}}
    Subject: NetworkSocket
    Filter: Tags["protocol"].Contains("http")

  - Name: os_fingerprint
    CommandTemplate: os-fingerprint.sh {{IP}}
    Subject: NetworkHost

  - Name: udp_scan
    CommandTemplate: udp-scan.sh {{IP}}
    Subject: NetworkHost
    CheckNotificationRules: true

  - Name: domain_resolution
    CommandTemplate: resolve.sh {{Name}}
    Subject: DomainName
    MonitorRules:
      Schedule: 0 0 * * *
      PostCondition: newTags["rcode"] != oldTags["rcode"]
      NotificationTemplate: domain {{Name}} changed rcode from {{oldTags["rcode"]}} to {{newTags["rcode"]}}

  - Name: httpx
    CommandTemplate: echo {{Name}} | httpx -silent
    Subject: DomainName

  - Name: sub_enum
    CommandTemplate: sub-enum.sh {{Name}} {{ZoneDepth}}
    Filter: DomainName.ZoneDepth <= 2
    Subject: DomainName
    MonitorRules:
      Schedule: 0 0 * * *
      PreCondition: DomainName.ZoneDepth == 1

  - Name: dns_record_enum
    CommandTemplate: dns-record-enum.sh {{Name}}
    Subject: DomainName

  - Name: get_all_urls
    CommandTemplate: get-all-urls.sh {{Name}}
    Subject: DomainName
    Filter: DomainName.ZoneDepth == 1

  - Name: email_finder
    CommandTemplate: email-finder.sh {{Name}}
    Subject: DomainName
    Filter: DomainName.ZoneDepth == 1

  - Name: reverse_whois
    CommandTemplate: reverse-whois.sh {{Address}}
    Subject: Email
    MatchOutOfScope: true

  - Name: zone_trasfer
    CommandTemplate: zone-transfer.sh {{Name}}
    Subject: DomainName
    CheckNotificationRules: true

  - Name: zone_walking
    CommandTemplate: ldns-walk {{Key}} | tail -n +2 | cut -d ' ' -f 1
    Filter: DomainNameRecord.Type == pwnctl.domain.Enums.DnsRecordType.NSEC
    Subject: DomainNameRecord
  
  - Name: ns_takeover_check
    CommandTemplate: ns_takeover_check.sh {{Name}}
    Subject: DomainName
    Filter: Tags["rcode"] == "SERVFAIL"
    MonitorRules:
      Schedule: 0 0 * * *
    CheckNotificationRules: true

  - Name: cname_takeover_check
    CommandTemplate: cloud_misconfig_scan.sh {{Value}}
    Subject: DomainNameRecord
    Filter: DomainNameRecord.Type == pwnctl.domain.Enums.DnsRecordType.CNAME
    MonitorRules:
      Schedule: 0 0 * * *
    CheckNotificationRules: true

#   - Name: second_order_takeover
#     CommandTemplate: cloud_misconfig_scan.sh {{Url}}
#     Subject: HttpEndpoint
#     Filter: CloudServiceRepository.Instance.IsCloudService(HttpEndpoint)
#     MatchOutOfScope: true

  - Name: s3_scan
    CommandTemplate: s3-scan.sh {{Name}}
    Subject: DomainName
    Filter: DomainName.Name.Contains("amazonaws.com") && DomainName.Name.Contains("s3")
    MatchOutOfScope: true
    CheckNotificationRules: true

  # - Name: tld_brute
  #   CommandTemplate: tld-brute.sh {{Name}}
  #   Subject: DomainName
  #   Filter: DomainName.ZoneDepth == 1

  - Name: cloud_enum
    CommandTemplate: cloud-enum.sh {{Word}}
    Subject: DomainName
    Filter: DomainName.ZoneDepth == 1

  - Name: screenshot
    CommandTemplate: screenshot.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: wafw00f
    CommandTemplate: wafw00f.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: grab_url_metadata
    CommandTemplate: grab-url-metadata.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint
    MonitorRules:
      Schedule: 0 0 * * *
      PreCondition: new List<string>{ "401", "403", "501", "502", "503", "504" }.Contains(Tags["Status"])
      PostCondition: newTags["Status"] != oldTags["Status"]
      NotificationTemplate: Endpoint {{Url}} changed status code from {{oldTags["Status"]}} to {{newTags["Status"]}}

  - Name: wappalyzer
    CommandTemplate: wappalyzer.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: webanalyze
    CommandTemplate: webanalyze.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: webcrawl
    CommandTemplate: webcrawl.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: cors_check
    CommandTemplate: check-cors.sh {{Url}}
    Subject: HttpEndpoint
    Filter: HttpEndpoint.Path == "/"
    CheckNotificationRules: true

  - Name: swagger_discovery
    CommandTemplate: swagger-discovery.sh {{Url}}
    Subject: HttpEndpoint
    Filter: HttpEndpoint.Path == "/"
    CheckNotificationRules: true

  - Name: panel_discovery
    CommandTemplate: panel-discovery.sh {{Url}}
    Subject: HttpEndpoint
    Filter: HttpEndpoint.Path == "/"
    CheckNotificationRules: true

  - Name: short_name_scanning
    CommandTemplate: shortname-check.sh {{Url}}
    Subject: HttpEndpoint
    Filter: Tags["Web servers"].Contains("IIS")||Tags["Web frameworks"]=="Microsoft ASP.NET"||Tags["Operating systems"]=="Windows Server"
    CheckNotificationRules: true

  - Name: dir_fuzz_main
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/directories.txt /opt/wordlists/high_impact.txt
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint
    CheckNotificationRules: true

  - Name: dir_fuzz_large_files
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/directories.txt /opt/wordlists/large_files.txt
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: dir_fuzz_iis_asp
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/iis_asp.txt
    Filter: HttpEndpoint.Path=="/"&&(Tags["Web servers"].Contains("IIS")||Tags["Web frameworks"]=="Microsoft ASP.NET"||Tags["Operating systems"]=="Windows Server")
    Subject: HttpEndpoint

  - Name: dir_fuzz_tomcat_csp
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/tomcat_jsp.txt
    Filter: HttpEndpoint.Path=="/"&&(Tags["Web servers"].Contains("Apache Tomcat")||Tags["Web frameworks"]=="Spring"||Tags["Programming languages"]=="Java")
    Subject: HttpEndpoint

  - Name: dir_fuzz_apache_php
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/apache_php.txt
    Filter: HttpEndpoint.Path=="/"&&(Tags["Web servers"].Equals("Apache")||Tags["Programming languages"]=="PHP")
    Subject: HttpEndpoint

  - Name: dir_fuzz_nginx
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/nginx.txt
    Filter: HttpEndpoint.Path=="/"&&Tags["Web servers"].Equals("Nginx")
    Subject: HttpEndpoint

