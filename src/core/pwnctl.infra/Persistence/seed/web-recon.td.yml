Profile: "web_recon"

TaskDefinitions:
  - Name: domain_resolution
    CommandTemplate: resolve.sh {{Name}}
    Subject: DomainName
    Filter: Tags["rcode"] == ""
    MonitorRules:
      Schedule: 0 0 * * *
      PostCondition: newTags["rcode"] != oldTags["rcode"]
      NotificationTemplate: domain {{Name}} changed rcode from {{oldTags["rcode"]}} to {{newTags["rcode"]}}

  - Name: httpx
    CommandTemplate: echo {{Name}} | httpx -silent -csp-probe
    Subject: DomainName

  - Name: sub_enum
    CommandTemplate: sub-enum.sh {{Name}} -d -m 110
    Filter: DomainName.ZoneDepth == 1
    Subject: DomainName
    MonitorRules:
      Schedule: 0 0 * * *

  - Name: dns_record_enum
    CommandTemplate: dns-record-enum.sh {{Name}} {{ZoneDepth}}
    Subject: DomainName

  - Name: email_finder
    CommandTemplate: email-finder.sh {{Name}}
    Subject: DomainName
    Filter: DomainName.ZoneDepth == 1

  - Name: reverse_whois
    CommandTemplate: reverse-whois.sh {{Address}}
    Subject: Email
    MatchOutOfScope: true

  - Name: zone_trasfer
    CommandTemplate: zone-transfer.sh {{Name}}
    Subject: DomainName
    CheckNotificationRules: true

  - Name: zone_walking
    CommandTemplate: ldns-walk {{Key}} | tail -n +2 | cut -d ' ' -f 1
    Filter: DomainNameRecord.Type == pwnctl.domain.Enums.DnsRecordType.NSEC
    Subject: DomainNameRecord

  - Name: grab_url_metadata
    CommandTemplate: grab-headers.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint
    MonitorRules:
      Schedule: 0 0 * * *
      PreCondition: new List<string>{ "401", "403", "404", "500", "501", "502", "503", "504" }.Contains(Tags["Status"])
      PostCondition: newTags["Status"] != oldTags["Status"]
      NotificationTemplate: Endpoint {{Url}} changed status code from {{oldTags["Status"]}} to {{newTags["Status"]}}

  - Name: wappalyzer
    CommandTemplate: wappalyzer.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: webanalyze
    CommandTemplate: webanalyze.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: get_all_urls
    CommandTemplate: get-all-urls.sh {{Name}}
    Subject: DomainName
    Filter: DomainName.ZoneDepth == 1

  - Name: webcrawl
    CommandTemplate: webcrawl.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: screenshot
    CommandTemplate: screenshot.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: wafw00f
    CommandTemplate: wafw00f.sh {{Url}}
    Filter: HttpEndpoint.Path == "/"
    Subject: HttpEndpoint

  - Name: cors_check
    CommandTemplate: check-cors.sh {{Url}}
    Subject: HttpEndpoint
    Filter: HttpEndpoint.Path == "/"
    CheckNotificationRules: true

  - Name: swagger_discovery
    CommandTemplate: swagger-discovery.sh {{Url}}
    Subject: HttpEndpoint
    Filter: HttpEndpoint.Path == "/"
    CheckNotificationRules: true

  - Name: panel_discovery
    CommandTemplate: panel-discovery.sh {{Url}}
    Subject: HttpEndpoint
    Filter: HttpEndpoint.Path == "/"
    CheckNotificationRules: true

  - Name: short_name_scanning
    CommandTemplate: shortname-check.sh {{Url}}
    Subject: HttpEndpoint
    Filter: Tags["Web servers"].Contains("IIS")||Tags["Web frameworks"]=="Microsoft ASP.NET"||Tags["Operating systems"]=="Windows Server"
    CheckNotificationRules: true

  - Name: dir_fuzz_main
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/directories.txt /opt/wordlists/high_impact.txt
    Filter: HttpEndpoint.Path == "/" && !Tags["Web servers"].Contains("IIS")
    Subject: HttpEndpoint
    CheckNotificationRules: true

  - Name: dir_fuzz_main_lowercase
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/directories_lowercase.txt /opt/wordlists/high_impact_lowercase.txt
    Filter: HttpEndpoint.Path == "/" && Tags["Web servers"].Contains("IIS")
    Subject: HttpEndpoint
    CheckNotificationRules: true

  - Name: dir_fuzz_iis_asp
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/iis_asp.txt
    Filter: HttpEndpoint.Path=="/"&&(Tags["Web servers"].Contains("IIS")||Tags["Web frameworks"]=="Microsoft ASP.NET"||Tags["Operating systems"]=="Windows Server")
    Subject: HttpEndpoint

  - Name: dir_fuzz_tomcat_jsp
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/tomcat_jsp.txt
    Filter: HttpEndpoint.Path=="/"&&(Tags["Web servers"].Contains("Apache Tomcat")||Tags["Web frameworks"]=="Spring"||Tags["Programming languages"]=="Java")
    Subject: HttpEndpoint

  - Name: dir_fuzz_apache_php
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/apache_php.txt
    Filter: HttpEndpoint.Path=="/"&&(Tags["Web servers"].Equals("Apache")||Tags["Programming languages"]=="PHP")
    Subject: HttpEndpoint

  - Name: dir_fuzz_nginx
    CommandTemplate: dir-fuzz.sh {{Url}} /opt/wordlists/tech/nginx.txt
    Filter: HttpEndpoint.Path=="/"&&Tags["Web servers"].Equals("Nginx")
    Subject: HttpEndpoint

  - Name: mdwfuzzer
    CommandTemplate: mdwfuzzer.sh {{Url}}
    Filter: HttpEndpoint.Path=="/"
    Subject: HttpEndpoint

  - Name: vhost_scan
    CommandTemplate: vhost-scan.sh {{Url}}
    Subject: HttpEndpoint
    Filter: false && HttpEndpoint.Path=="/" && HttpEndpoint.Socket.DomainNameId == null
    StdinQuery: SELECT "Name" FROM "asset_records" JOIN "domain_names" ON "DomainId" WHERE "DomainId" != null AND "Domain"."InScope" == true
