version: '3'

tasks:
  simple-setup:
    deps: [install-deps, setup-ci, build-exec-image, push-exec-image, build-proc-image, push-proc-image, deploy, install-cli]

  test:
    deps: [test-core, test-exec, test-proc]

  test-core:
    cmds:
      - dotnet test --filter "FullyQualifiedName~test.unit"

  test-proc:
    cmds:
      - |
        rm -rf test/pwnctl.proc.test.int/bin
        export ECR_REGISTRY_URI=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-proc") | .repositoryUri')
        dotnet test --filter "FullyQualifiedName~pwnctl.proc"

  test-exec:
    cmds:
    - |
      rm -rf test/pwnctl.exec.test.int/bin
      export ECR_REGISTRY_URI=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-exec") | .repositoryUri')
      dotnet test --filter "FullyQualifiedName~pwnctl.exec"

  build-api:
    cmds:
      - dotnet build src/pwnctl.api/pwnctl.api.csproj -c Release

  build-cli:
    cmds:
      - dotnet publish src/pwnctl.cli/pwnctl.cli.csproj -c Release

  build-exec-image:
    cmds:
      - |
        ecrUri=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-exec") | .repositoryUri')
        docker build src/core/ -f src/core/pwnctl.exec/Dockerfile -t ${ecrUri}:latest
        docker tag ${ecrUri}:latest ${ecrUri}:untested

  push-exec-image:
    cmds:
      - |
        region=$(aws configure get region)
        ecrUri=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-exec") | .repositoryUri')
        aws ecr get-login-password --region $region \
          | docker login --username AWS --password-stdin $ecrUri
        docker push ${ecrUri}:latest

  build-proc-image:
    cmds:
      - |
        ecrUri=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-proc") | .repositoryUri')
        docker build src/core/ -f src/core/pwnctl.proc/Dockerfile -t ${ecrUri}:latest
        docker tag ${ecrUri}:latest ${ecrUri}:untested

  push-proc-image:
    cmds:
      - |
        region=$(aws configure get region)
        ecrUri=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-proc") | .repositoryUri')
        aws ecr get-login-password --region $region \
          | docker login --username AWS --password-stdin $ecrUri
        docker push ${ecrUri}:latest

  build-all:
    deps: [build-cli, build-api, build-exec-image, build-proc-image]

  install-cli:
    deps: [build-cli]
    cmds:
      - chmod +x src/pwnctl.cli/bin/Release/net7.0/linux-x64/publish/pwnctl
      - mv src/pwnctl.cli/bin/Release/net7.0/linux-x64/publish/pwnctl ~/.local/bin
      - mkdir -p ~/.config/pwnctl/
      - chown $USER ~/.config/pwnctl/
      - mv src/pwnctl.cli/bin/Release/net7.0/linux-x64/publish/config.ini ~/.config/pwnctl/
      - ./src/core/pwnctl.exec/scripts/get-psl.sh ~/.config/pwnctl/
      - cp -r ./src/core/pwnctl.infra/Persistence/seed ~/.config/pwnctl

  setup-ci:
    cmds:
      - gh variable set AWS_REGION --body "$(aws configure get region)"
      - gh variable set AWS_CALLER_IDENTITY --body "$(aws sts get-caller-identity | jq -r .Account)"
      - terraform -chdir=infra/modules/ci apply -auto-approve

  deploy:
    deps: [setup-ci, build-api, install-cli]
    cmds:
      - terraform -chdir=infra apply -auto-approve
      - ./bin/upload-conf.sh

  destroy:
    cmds:
      - ./bin/teardown.sh

  destroy-ci:
    cmds:
      - terraform -chdir=infra/modules/ci destroy

  debug-exec:
    cmds:
      - |
        ecrUri=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-exec") | .repositoryUri')
        docker run -e PWNCTL_USE_LOCAL_INTEGRATIONS=true -e PWNCTL_INSTALL_PATH=/mnt/efs \
                   -e PWNCTL_Logging__FilePath=/mnt/efs -e PWNCTL_Logging__MinLevel=Information \
                   -e PWNCTL_TaskQueue__VisibilityTimeout=1200 -e PWNCTL_OutputQueue__VisibilityTimeout=1200 \
                   -v "$(pwd)"/deployment:/mnt/efs -t ${ecrUri}:latest

  debug-proc:
    cmds:
      - |
        mkdir -p deployment/seed/
        cp ./src/core/pwnctl.infra/Persistence/seed/*.yml deployment/seed/
        ecrUri=$(aws ecr describe-repositories | jq -r '.repositories[] | select( .repositoryName == "pwnctl-proc") | .repositoryUri')
        docker run -e PWNCTL_USE_LOCAL_INTEGRATIONS=true -e PWNCTL_INSTALL_PATH=/mnt/efs \
                   -e PWNCTL_Logging__FilePath=/mnt/efs -e PWNCTL_Logging__MinLevel=Information \
                   -e PWNCTL_TaskQueue__VisibilityTimeout=1200 -e PWNCTL_OutputQueue__VisibilityTimeout=1200 \
                   -v "$(pwd)"/deployment:/mnt/efs -t ${ecrUri}:latest

  get-exec-logs:
    cmds:
      - awslogs get -s 1440m -G --timestamp /aws/ecs/exec

  get-proc-logs:
    cmds:
      - awslogs get -s 1440m -G --timestamp /aws/ecs/proc

  get-api-logs:
    cmds:
      - |
        functionName=$(aws lambda list-functions | jq -r '.Functions[] | select( .FunctionName | startswith("pwnctl_api") ) | .FunctionName')
        awslogs get -s 1440m -G --timestamp /aws/lambda/$functionName

  install-deps:
    cmds:
      - ./bin/install-deps.sh
