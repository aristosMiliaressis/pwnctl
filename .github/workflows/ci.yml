name: ci

on:
  push:
    branches:
      - '**'
  pull_request:

  workflow_dispatch:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - name: Checkout subject branch
        uses: actions/checkout@v3

      - name: Cache Nuget packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: nuget

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run Unit Tests
        run: dotnet test --filter "FullyQualifiedName~test.unit"

  build-cli:
    needs: unit-test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:7.0
    steps:
      - name: Checkout subject branch
        uses: actions/checkout@v3

      - name: Cache Nuget packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: nuget

      - name: build cli
        run: dotnet publish "src/pwnctl.cli/pwnctl.cli.csproj" -c Release -o ./pwnctl

  build-api:
    needs: unit-test
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - name: Checkout subject branch
        uses: actions/checkout@v3

      - name: Cache Nuget packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: nuget

      - name: build api
        run: dotnet build src/pwnctl.api/pwnctl.api.csproj

  build-worker-img:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout subject branch
        uses: actions/checkout@v3

    #   - name: Login to Public ECR
    #     uses: docker/login-action@v2
    #     with:
    #       registry: public.ecr.aws
    #       username: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #       password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     env:
    #       AWS_REGION: us-east-1

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: false
          tags: public.ecr.aws/i0m2p7r6/pwnctl:latest
          context: src/core/
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-wroker-img:
    needs: build-worker-img
    runs-on: ubuntu-latest
    steps:
      - name: Test worker image
        run: dotnet test --filter  --filter "FullyQualifiedName~pwnctl.svc"

  push-wroker-img:
    needs: test-worker-img
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Public ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Push worker image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: public.ecr.aws/i0m2p7r6/pwnctl:latest
          context: src/core/
          cache-from: type=gha
          cache-to: type=gha,mode=max
