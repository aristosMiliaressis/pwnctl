name: ci

on:
  push:
    branches:
      - '**'
  pull_request:

  workflow_dispatch:

jobs:
  test-and-build-cli:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - name: Checkout subject branch
        uses: actions/checkout@v2

      - name: Cache Nuget packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: nuget

      - name: test cli
        run: dotnet test

      - name: build cli
        run: dotnet publish "src/pwnctl.cli/pwnctl.cli.csproj" -c Release -o ./pwnctl

      - name: create tarball
        run: tar -zcvf build.tar.gz pwnctl

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-tarball
          path: ./build.tar.gz
          retention-days: 1

  build-api:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - name: Checkout subject branch
        uses: actions/checkout@v2

      - name: Cache Nuget packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: nuget

      - name: build api
        run: dotnet build src/pwnctl.api/pwnctl.api.csproj

  release-cli:
    needs: test-and-build-cli
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-tarball

      - name: get datetime stamp
        run: echo "::set-output name=STAMP::$(date +%y%m%d%H%M%S)"
        id: datetime

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}.${{ steps.datetime.outputs.STAMP }}
          release_name: Release ${{ github.run_number }}.${{ steps.datetime.outputs.STAMP }}

      - name: Upload relase assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: pwnctl-linux64.tar.gz
          asset_path: ./build.tar.gz
          asset_content_type: application/x-elf

  build-and-push-worker:
    needs: test-and-build-cli
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout subject branch
        uses: actions/checkout@v2

      - name: Login to Public ECR
        uses: docker/login-action@v2
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: us-east-1

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: public.ecr.aws/i0m2p7r6/pwnwrk:latest
          context: src/
          cache-from: type=gha
          cache-to: type=gha,mode=max
