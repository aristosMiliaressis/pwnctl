#!/bin/bash

if [ $# -eq 0 ];
then
    echo "USAGE: dig_deep <hostfile>"
    exit 1
fi

sort_and_uniq() {
    cat $1 | sort | uniq > temp.txt
    cat temp.txt > $1
    rm temp.txt
}

#dns_query sub.registration_domain.tld [registration_domain.tld] 
dns_query() {
    record_types=('A' 'AAAA' 'CNAME' 'TXT' 'MX' 'NS' 'SRV' 'ANY')
    query=''
    for record_type in "${record_types[@]}"
    do
        query="$query$record_type $1 "
    done  

    echo "Querying $(echo "${record_types[@]}" | tr '\n' ' ') @$2 $1"

    if [ $# -gt 1 ];
    then
        dig +noquestion +nottlid @$2 $query 2> /dev/null | tr '\t' ' ' | grep " IN " >> all_records.txt
    else
        dig +noquestion +nottlid $query 2> /dev/null | tr '\t' ' ' | grep " IN " >> all_records.txt
    fi
}

find_authoritative_ns() {
    if [ ! -f /tmp/suffixes.txt ];
    then
        curl -s https://publicsuffix.org/list/public_suffix_list.dat | grep -v "//" | sed -r '/^\s*$/d' | sed 's/*.//g' > /tmp/suffixes.txt
    fi

    suffix=$1
    registration_domain=''
    while [ -z "$registration_domain" ]; 
    do
        tmp=$(echo "${suffix#*.}")

        if grep -Fxq $tmp /tmp/suffixes.txt
        then
            registration_domain=$suffix
        fi
        suffix=$tmp
    done

    dig SOA $registration_domain | tr '\t' ' ' | grep " IN SOA " | awk '{print $5}'
}

for sub in $(cat $1)
do
    ns_authority=$(find_authoritative_ns $sub)

    dns_query $sub $ns_authority
done

sort_and_uniq all_records.txt

cat all_records.txt | grep " IN A" | awk '{print $4}' >> all_hosts.txt
sort_and_uniq all_hosts.txt

# extracting ips from SPF records
cat all_records.txt | grep " IN TXT " | grep spf | tr ' ' '\n' | grep 'ip4\|ip6' | cut -d':' -f2- >> all_hosts.txt

for host in $(cat all_hosts.txt)
do
    echo "Searching for PTR in $host"
    dig +noquestion +nottlid -x $host | tr '\t' ' ' | grep " IN " >> all_records.txt
done

sort_and_uniq all_records.txt

cat all_records.txt | grep 'IN A \|IN AAAA\|IN CNAME' | awk '{print $1}' >> routable_domains.txt

pwnctl < all_hosts.txt 
pwnctl < all_records.txt

cat all_records.txt | grep CNAME | awk '{print $1}' | while read cname;
do
    echo "Checking $cname for takeover"
    if [[ $(host $cname | grep 'NXDOMAIN\|SERVFAIL\|REFUSED\|no servers could be reached') != "" ]]
    then
        echo "Possible CNAME takeover on $cname"
        echo "$cname" >> takeovers.txt
    fi
done

zone_transfer() {
    echo "Zone transfer attempt $1 $2"
    res=$(dig @$1 $2 axfr)
    if ! [[ $res == *"Transfer failed"* ]];
    then
        echo $res >> zone_transfer.txt
    fi
}

grep " IN NS" all_records.txt | while read -r entry ; do
    ns=$(echo $entry | awk '{print $4}') 
    domain=$(echo $entry | awk '{print $1}')

    zone_transfer $ns $domain
    zone_transfer $ns "local"
    zone_transfer $ns internal
    zone_transfer $ns int
    zone_transfer $ns network
    zone_transfer $ns company
    zone_transfer $ns server
    zone_transfer $ns lan
    zone_transfer $ns computer
    zone_transfer $ns "-x 192.168"
    zone_transfer $ns "-x 10"
    for i in $(seq 16 31);
    do
        zone_transfer $ns "-x 172.$i"
    done
done
